{"ast":null,"code":"import _slicedToArray from\"/Users/katejohnson/Desktop/shop-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import{useQuery}from'@apollo/client';import ProductItem from'../ProductItem';import{QUERY_PRODUCTS}from'../../utils/queries';import spinner from'../../assets/spinner.gif';import{useStoreContext}from'../../utils/GlobalState';import{UPDATE_PRODUCTS}from'../../utils/actions';import{idbPromise}from'../../utils/helpers';function ProductList(){var _useStoreContext=useStoreContext(),_useStoreContext2=_slicedToArray(_useStoreContext,2),state=_useStoreContext2[0],dispatch=_useStoreContext2[1];var currentCategory=state.currentCategory;var _useQuery=useQuery(QUERY_PRODUCTS),loading=_useQuery.loading,data=_useQuery.data;useEffect(function(){if(data){dispatch({type:UPDATE_PRODUCTS,products:data.products});// also save each product to IndexedDB\ndata.products.forEach(function(product){idbPromise('products','put',product);});// add else if to check if 'loading' is undefined in 'useQuery()' hook\n}else if(!loading){// offiline, get all data from the 'products' store\nidbPromise('products','get').then(function(products){// use retrieved data to set global state for offline browsing\ndispatch({type:UPDATE_PRODUCTS,products:products});});}},[data,loading,dispatch]);function filterProducts(){if(!currentCategory){return state.products;}return state.products.filter(function(product){return product.category._id===currentCategory;});}return/*#__PURE__*/React.createElement(\"div\",{className:\"my-2\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Our Products:\"),state.products.length?/*#__PURE__*/React.createElement(\"div\",{className:\"flex-row\"},filterProducts().map(function(product){return/*#__PURE__*/React.createElement(ProductItem,{key:product._id,_id:product._id,image:product.image,name:product.name,price:product.price,quantity:product.quantity});})):/*#__PURE__*/React.createElement(\"h3\",null,\"You haven't added any products yet!\"),loading?/*#__PURE__*/React.createElement(\"img\",{src:spinner,alt:\"loading\"}):null);}export default ProductList;","map":{"version":3,"sources":["/Users/katejohnson/Desktop/shop-shop/client/src/components/ProductList/index.js"],"names":["React","useEffect","useQuery","ProductItem","QUERY_PRODUCTS","spinner","useStoreContext","UPDATE_PRODUCTS","idbPromise","ProductList","state","dispatch","currentCategory","loading","data","type","products","forEach","product","then","filterProducts","filter","category","_id","length","map","image","name","price","quantity"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAASC,cAAT,KAA+B,qBAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CAEA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,eAAT,KAAgC,qBAAhC,CAEA,OAASC,UAAT,KAA2B,qBAA3B,CAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB,qBAA0BH,eAAe,EAAzC,sDAAOI,KAAP,sBAAcC,QAAd,sBACA,GAAQC,CAAAA,eAAR,CAA4BF,KAA5B,CAAQE,eAAR,CACA,cAA0BV,QAAQ,CAACE,cAAD,CAAlC,CAAQS,OAAR,WAAQA,OAAR,CAAiBC,IAAjB,WAAiBA,IAAjB,CAEAb,SAAS,CAAC,UAAM,CACd,GAAIa,IAAJ,CAAU,CACRH,QAAQ,CAAC,CACPI,IAAI,CAAER,eADC,CAEPS,QAAQ,CAAEF,IAAI,CAACE,QAFR,CAAD,CAAR,CAIA;AACAF,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAsB,SAACC,OAAD,CAAa,CACjCV,UAAU,CAAC,UAAD,CAAa,KAAb,CAAoBU,OAApB,CAAV,CACD,CAFD,EAGA;AACD,CAVD,IAUO,IAAI,CAACL,OAAL,CAAc,CACnB;AACAL,UAAU,CAAC,UAAD,CAAa,KAAb,CAAV,CAA8BW,IAA9B,CAAmC,SAACH,QAAD,CAAc,CAC/C;AACAL,QAAQ,CAAC,CACPI,IAAI,CAAER,eADC,CAEPS,QAAQ,CAAEA,QAFH,CAAD,CAAR,CAID,CAND,EAOD,CACF,CArBQ,CAqBN,CAACF,IAAD,CAAOD,OAAP,CAAgBF,QAAhB,CArBM,CAAT,CAuBA,QAASS,CAAAA,cAAT,EAA0B,CACxB,GAAI,CAACR,eAAL,CAAsB,CACpB,MAAOF,CAAAA,KAAK,CAACM,QAAb,CACD,CACD,MAAON,CAAAA,KAAK,CAACM,QAAN,CAAeK,MAAf,CACL,SAACH,OAAD,QAAaA,CAAAA,OAAO,CAACI,QAAR,CAAiBC,GAAjB,GAAyBX,eAAtC,EADK,CAAP,CAGD,CAED,mBACE,2BAAK,SAAS,CAAC,MAAf,eACE,8CADF,CAEGF,KAAK,CAACM,QAAN,CAAeQ,MAAf,cACC,2BAAK,SAAS,CAAC,UAAf,EACGJ,cAAc,GAAGK,GAAjB,CAAqB,SAACP,OAAD,qBACpB,oBAAC,WAAD,EACE,GAAG,CAAEA,OAAO,CAACK,GADf,CAEE,GAAG,CAAEL,OAAO,CAACK,GAFf,CAGE,KAAK,CAAEL,OAAO,CAACQ,KAHjB,CAIE,IAAI,CAAER,OAAO,CAACS,IAJhB,CAKE,KAAK,CAAET,OAAO,CAACU,KALjB,CAME,QAAQ,CAAEV,OAAO,CAACW,QANpB,EADoB,EAArB,CADH,CADD,cAcC,oEAhBJ,CAkBGhB,OAAO,cAAG,2BAAK,GAAG,CAAER,OAAV,CAAmB,GAAG,CAAC,SAAvB,EAAH,CAAyC,IAlBnD,CADF,CAsBD,CAED,cAAeI,CAAAA,WAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\n\nimport ProductItem from '../ProductItem'\nimport { QUERY_PRODUCTS } from '../../utils/queries'\nimport spinner from '../../assets/spinner.gif'\n\nimport { useStoreContext } from '../../utils/GlobalState'\nimport { UPDATE_PRODUCTS } from '../../utils/actions'\n\nimport { idbPromise } from '../../utils/helpers'\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext()\n  const { currentCategory } = state\n  const { loading, data } = useQuery(QUERY_PRODUCTS)\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      })\n      // also save each product to IndexedDB\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product)\n      })\n      // add else if to check if 'loading' is undefined in 'useQuery()' hook\n    } else if (!loading) {\n      // offiline, get all data from the 'products' store\n      idbPromise('products', 'get').then((products) => {\n        // use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        })\n      })\n    }\n  }, [data, loading, dispatch])\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products\n    }\n    return state.products.filter(\n      (product) => product.category._id === currentCategory,\n    )\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  )\n}\n\nexport default ProductList\n"]},"metadata":{},"sourceType":"module"}