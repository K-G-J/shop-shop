{"ast":null,"code":"import _objectSpread from\"/Users/katejohnson/Desktop/shop-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import{ApolloClient,InMemoryCache,ApolloProvider,createHttpLink}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import Home from'./pages/Home';import Detail from'./pages/Detail';import NoMatch from'./pages/NoMatch';import Login from'./pages/Login';import Signup from'./pages/Signup';import Nav from'./components/Nav';import OrderHistory from'./pages/OrderHistory';var httpLink=createHttpLink({uri:'/graphql'});var authLink=setContext(function(_,_ref){var headers=_ref.headers;var token=localStorage.getItem('id_token');return{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token?\"Bearer \".concat(token):''})};});var client=new ApolloClient({link:authLink.concat(httpLink),cache:new InMemoryCache()});function App(){return/*#__PURE__*/React.createElement(ApolloProvider,{client:client},/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Nav,null),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\",component:Home}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/login\",component:Login}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/signup\",component:Signup}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/orderHistory\",component:OrderHistory}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/products/:id\",component:Detail}),/*#__PURE__*/React.createElement(Route,{component:NoMatch})))));}export default App;","map":{"version":3,"sources":["/Users/katejohnson/Desktop/shop-shop/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","Home","Detail","NoMatch","Login","Signup","Nav","OrderHistory","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAuD,kBAAvD,CACA,OACEC,YADF,CAEEC,aAFF,CAGEC,cAHF,CAIEC,cAJF,KAKO,gBALP,CAMA,OAASC,UAAT,KAA2B,6BAA3B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAGT,cAAc,CAAC,CAC9BU,GAAG,CAAE,UADyB,CAAD,CAA/B,CAIA,GAAMC,CAAAA,QAAQ,CAAGV,UAAU,CAAC,SAACW,CAAD,MAAoB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC9C,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd,CACA,MAAO,CACLH,OAAO,gCACFA,OADE,MAELI,aAAa,CAAEH,KAAK,kBAAaA,KAAb,EAAuB,EAFtC,EADF,CAAP,CAMD,CAR0B,CAA3B,CAUA,GAAMI,CAAAA,MAAM,CAAG,GAAIrB,CAAAA,YAAJ,CAAiB,CAC9BsB,IAAI,CAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB,CAE9BY,KAAK,CAAE,GAAIvB,CAAAA,aAAJ,EAFuB,CAAjB,CAAf,CAKA,QAASwB,CAAAA,GAAT,EAAe,CACb,mBACE,oBAAC,cAAD,EAAgB,MAAM,CAAEJ,MAAxB,eACE,oBAAC,MAAD,mBACE,4CACE,oBAAC,GAAD,MADF,cAEE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEhB,IAAjC,EADF,cAEE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,SAAS,CAAEG,KAAtC,EAFF,cAGE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,SAAlB,CAA4B,SAAS,CAAEC,MAAvC,EAHF,cAIE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,eAAlB,CAAkC,SAAS,CAAEE,YAA7C,EAJF,cAKE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,eAAlB,CAAkC,SAAS,CAAEL,MAA7C,EALF,cAME,oBAAC,KAAD,EAAO,SAAS,CAAEC,OAAlB,EANF,CAFF,CADF,CADF,CADF,CAiBD,CAED,cAAekB,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/orderHistory\" component={OrderHistory} />\n            <Route exact path=\"/products/:id\" component={Detail} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}