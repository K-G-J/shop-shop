{"ast":null,"code":"import _slicedToArray from\"/Users/katejohnson/Desktop/shop-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import CartItem from'../CartItem';import Auth from'../../utils/auth';import'./style.css';import{useStoreContext}from'../../utils/GlobalState';import{TOGGLE_CART}from'../../utils/actions';export default function Cart(){var _useStoreContext=useStoreContext(),_useStoreContext2=_slicedToArray(_useStoreContext,2),state=_useStoreContext2[0],dispatch=_useStoreContext2[1];console.log(state);function toggleCart(){dispatch({type:TOGGLE_CART});}function calculateTotal(){var sum=0;state.cart.forEach(function(item){sum+=item.price*item.purchaseQuantity;});return sum.toFixed(2);}if(!state.cartOpen){return/*#__PURE__*/React.createElement(\"div\",{className:\"cart-closed\",onClick:toggleCart},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"trash\"},\"\\uD83D\\uDED2\"));}return/*#__PURE__*/React.createElement(\"div\",{className:\"cart\"},/*#__PURE__*/React.createElement(\"div\",{className:\"close\",onClick:toggleCart},\"[close]\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Shopping Cart\"),state.cart.length?/*#__PURE__*/React.createElement(\"div\",null,state.cart.map(function(item){return/*#__PURE__*/React.createElement(CartItem,{key:item._id,item:item});}),/*#__PURE__*/React.createElement(\"div\",{className:\"flex-row space-between\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Total: $\",calculateTotal()),Auth.loggedIn()?/*#__PURE__*/React.createElement(\"button\",null,\"Checkout\"):/*#__PURE__*/React.createElement(\"span\",null,\"(log in to check out)\"))):/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"shocked\"},\"\\uD83D\\uDE31\"),\"You haven't added anything to your cart yet!\"));}","map":{"version":3,"sources":["/Users/katejohnson/Desktop/shop-shop/client/src/components/Cart/index.js"],"names":["React","CartItem","Auth","useStoreContext","TOGGLE_CART","Cart","state","dispatch","console","log","toggleCart","type","calculateTotal","sum","cart","forEach","item","price","purchaseQuantity","toFixed","cartOpen","length","map","_id","loggedIn"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAO,aAAP,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,WAAT,KAA4B,qBAA5B,CAEA,cAAe,SAASC,CAAAA,IAAT,EAAgB,CAC7B,qBAA0BF,eAAe,EAAzC,sDAAOG,KAAP,sBAAcC,QAAd,sBACAC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAEA,QAASI,CAAAA,UAAT,EAAsB,CACpBH,QAAQ,CAAC,CAAEI,IAAI,CAAEP,WAAR,CAAD,CAAR,CACD,CAED,QAASQ,CAAAA,cAAT,EAA0B,CACxB,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACAP,KAAK,CAACQ,IAAN,CAAWC,OAAX,CAAmB,SAACC,IAAD,CAAU,CAC3BH,GAAG,EAAIG,IAAI,CAACC,KAAL,CAAaD,IAAI,CAACE,gBAAzB,CACD,CAFD,EAGA,MAAOL,CAAAA,GAAG,CAACM,OAAJ,CAAY,CAAZ,CAAP,CACD,CAED,GAAI,CAACb,KAAK,CAACc,QAAX,CAAqB,CACnB,mBACE,2BAAK,SAAS,CAAC,aAAf,CAA6B,OAAO,CAAEV,UAAtC,eACE,4BAAM,IAAI,CAAC,KAAX,CAAiB,aAAW,OAA5B,iBADF,CADF,CAOD,CACD,mBACE,2BAAK,SAAS,CAAC,MAAf,eACE,2BAAK,SAAS,CAAC,OAAf,CAAuB,OAAO,CAAEA,UAAhC,YADF,cAIE,8CAJF,CAKGJ,KAAK,CAACQ,IAAN,CAAWO,MAAX,cACC,+BACGf,KAAK,CAACQ,IAAN,CAAWQ,GAAX,CAAe,SAACN,IAAD,qBACd,oBAAC,QAAD,EAAU,GAAG,CAAEA,IAAI,CAACO,GAApB,CAAyB,IAAI,CAAEP,IAA/B,EADc,EAAf,CADH,cAIE,2BAAK,SAAS,CAAC,wBAAf,eACE,6CAAiBJ,cAAc,EAA/B,CADF,CAEGV,IAAI,CAACsB,QAAL,gBACC,6CADD,cAGC,wDALJ,CAJF,CADD,cAeC,2CACE,4BAAM,IAAI,CAAC,KAAX,CAAiB,aAAW,SAA5B,iBADF,gDApBJ,CADF,CA8BD","sourcesContent":["import React from 'react'\nimport CartItem from '../CartItem'\nimport Auth from '../../utils/auth'\nimport './style.css'\nimport { useStoreContext } from '../../utils/GlobalState'\nimport { TOGGLE_CART } from '../../utils/actions'\n\nexport default function Cart() {\n  const [state, dispatch] = useStoreContext()\n  console.log(state)\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART })\n  }\n\n  function calculateTotal() {\n    let sum = 0\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity\n    })\n    return sum.toFixed(2)\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          ðŸ›’\n        </span>\n      </div>\n    )\n  }\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n            {Auth.loggedIn() ? (\n              <button>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            ðŸ˜±\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}